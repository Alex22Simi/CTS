Cerințe obligatorii
1. Pattern-urile implementate trebuie sa respecte definiția din GoF discutată în cadrul cursurilor și
laboratoarelor. Nu sunt acceptate variații sau implementări incomplete.
2. Pattern-ul trebuie implementat în totalitate corect pentru a fi luat în calcul.
3. Soluția nu conține erori de compilare.
4. Pattern-urile pot fi tratate distinct sau pot fi implementate pe același set de clase.
5. Implementările care nu au legătura funcțională cu cerințele din subiect NU vor fi luate în calcul
(preluare unui exemplu din alte surse nu va fi punctată).
6. NU este permisă modificare claselor primite.
7. Soluțiile vor fi verificate încrucișat folosind MOSS. Nu este permisă partajarea de cod între
studenți. Soluțiile care au un grad de similitudine mai mare de 30% vor fi anulate.
Cerințe Clean Code obligatorii (soluția este depunctata cu câte 2 puncte pentru fiecare cerința ce nu este
respectată) - maxim se pot pierde 8 puncte
1. Pentru denumirea claselor, funcțiilor, testelor unitare, atributelor și a variabilelor se respecta
convenția de nume de tip Java Mix CamelCase;
2. Pattern-urile și clasa ce conține metoda main() sunt definite in pachete distincte ce au forma
cts.nume.prenume.gNrGrupa.denumire_pattern, cts.nume.prenume.gNrGrupa.main (studenții
din anul suplimentar trec “as” în loc de gNrGrupa);
3. Clasele și metodele sunt implementate respectând principiile KISS, DRY și SOLID (atenție la DIP);
4. Denumirile de clase, metode, variabile, precum și mesajele afișate la consola trebuie sa aibă
legătura cu subiectul primit (nu sunt acceptate denumiri generice). Funcțional, metodele vor afișa
mesaje la consola care sa simuleze acțiunea cerută sau vor implementa prelucrări simple.
Se dezvoltă o aplicație software destinată unui aplicații web.
5p. În cadrul unei aplicații web de tip comerț electronic, utilizatorul are opțiunea de a selecta tehnica
de vizualizare a produselor (IProdus) din cadrul magazinului. Astfel, acesta poate opta între:
afișare produse în ordine crescătoare preț, descrescătoare preț, afișare doar a produselor care
au cel puțin o recenzie. Să se implementeze modulul ce permite integrarea acestei opțiuni de
vizualizare a listei de produse ținându-se cont de faptul că, în timp, se pot adăuga noi tehnici de
vizualizare puse la dispoziție de către dezvoltatorii web.
3p. Să se testeze implementarea prin crearea unui utilizator și setarea a cel puțin 2 opțiuni de
vizualizare a listei de produse din magazin.
9p. S-a observat că, atunci când conexiunea la internet este slabă, încărcarea resurselor unei pagini
web se realizează într-un timp foarte mare. Astfel, s-a luat decizia optimizării acestui proces prin
crearea unei filtrări pe elementele încărcare. O pagină web este reprezentată de o listă de obiecte
tip Item (paragrafe, imagini, etc). Filtrarea este formată din mai multe etape precum: eliminarea
obiectelor tip imagine, schimbarea setărilor paragrafelor prin reducerea doar la culoare negru,
fără alte setări precum bold, italic, etc. Se cunoaște faptul că aceste etape pot fi interschimbate
și, de asemenea, că se pot adăuga filtrări suplimentare în cazul în care prezenta implementare
nu atinge optimul dorit. Să se realizeze modulul ce implementează funcționalitățile dorite ținând
cont de interfețele primite.
3p. Pattern-ul este testat în main() prin definirea unui număr de minim 2 obiecte de tip pagină web
și transformarea lor pe baza fluxului de filtrări propus.