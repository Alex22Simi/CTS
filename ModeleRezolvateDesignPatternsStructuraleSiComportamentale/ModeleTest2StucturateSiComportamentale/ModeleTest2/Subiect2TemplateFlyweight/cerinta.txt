Cerințe obligatorii
1. Pattern-urile implementate trebuie sa respecte definiția din GoF discutată în cadrul cursurilor și
laboratoarelor. Nu sunt acceptate variații sau implementări incomplete.
2. Pattern-ul trebuie implementat în totalitate corect pentru a fi luat în calcul.
3. Soluția nu conține erori de compilare.
4. Pattern-urile pot fi tratate distinct sau pot fi implementate pe același set de clase.
5. Implementările care nu au legătura funcțională cu cerințele din subiect NU vor fi luate în calcul
(preluare unui exemplu din alte surse nu va fi punctată).
6. NU este permisă modificare claselor primite.
7. Soluțiile vor fi verificate încrucișat folosind MOSS. Nu este permisă partajarea de cod între
studenți. Soluțiile care au un grad de similitudine mai mare de 30% vor fi anulate.
Cerințe Clean Code obligatorii (soluția este depunctata cu câte 2 puncte pentru fiecare cerința ce nu este
respectată) - maxim se pot pierde 8 puncte
1. Pentru denumirea claselor, funcțiilor, testelor unitare, atributelor și a variabilelor se respecta
convenția de nume de tip Java Mix CamelCase;
2. Pattern-urile și clasa ce conține metoda main() sunt definite in pachete distincte ce au forma
cts.nume.prenume.gNrGrupa.denumire_pattern, cts.nume.prenume.gNrGrupa.main (studenții
din anul suplimentar trec “as” în loc de gNrGrupa);
3. Clasele și metodele sunt implementate respectând principiile KISS, DRY și SOLID (atenție la DIP);
4. Denumirile de clase, metode, variabile, precum și mesajele afișate la consola trebuie sa aibă
legătura cu subiectul primit (nu sunt acceptate denumiri generice). Funcțional, metodele vor afișa
mesaje la consola care sa simuleze acțiunea cerută sau vor implementa prelucrări simple.
Se dezvoltă o aplicație software destinată unui spital.
5p. În cadrul spitalului, în unitatea de primiri urgențe, există un protocol general valabil format dintr
un număr fix de pași pe care orice urgență apărută trebuie să îl urmeze. Ca prim pas sunt
verificate semnele vitale ale pacientului. Dacă semnele vitale nu indică suspiciuni grave, atunci
este verificat centralizatorul de programări a medicilor de familie pentru a genera cea mai
apropiată programare disponibilă. Dacă semnele vitale indică suspiuni grave, atunci se intervine
printr-o echipă de medici pentru a stabiliza pacientul. Ulterior, se verifică disponibilitatea unui
loc în spital pentru internare. Dacă nu există locuri libere, atunci se fac căutări la cele mai
apropiate spitale de stat. Acest protocol este folosit și de către spitalele private însă, în acest caz,
semnele vitale ce indică suspiciuni grave conduc la chemarea unei echipe externe de medici
pentru stabilizarea pacientului. Să se implementeze acest protocol în cadrul preluării unui nou
caz medical de către spitalele de stat și privat.
3p. Să se terteze soluția implementată prin apelul șablonului de preluare caz medical nou de către un
spital de stat și unul privat.
9p. Managementul spitalului dorește implementarea unei modul de printare a rețetelor pe care le
primesc pacienții alături de diagnosticul lor principal cu care ies din spital. Alături de aceste
informații, pentru a facilita accesul la informații ce vizează sătătatea populației, rețetele printate
conțin și un set de recomandări de sănătate generală, de ex: consumul de minim 2 litri de apă pe
zi, numărul de ore de somn, evitarea consumului de sare și zahăr, etc. Cunoscându-se faptul că
există un număr limitat de seturi de recomandări generale privind sănătatea în comparație cu
numărul mare de rețete ce se tipăresc în spital, să se implementeze un modul ce optimizează
spațiul de memorie ocupat privind listarea rețetelor.
3p. Să se testeze soluția prin printarea a unui număr de minim 10 rețete.